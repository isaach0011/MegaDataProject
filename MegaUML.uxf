<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>90</x>
      <y>60</y>
      <w>320</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>Timer
--
- executionTime : clock_t
--
+startTimer()
+stopTimer()
+resetTimer()
+displaytTimerInformation()
+getExecutionTimeInMicroseconds()
bg=magenta</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>70</y>
      <w>380</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>IntNode
--
- nodeData : int
- nodePointer : IntNode *
--
+ getNodeData() : int
+ getNodePointer() : IntNode *
+ setNodeData(int value) : void
+ setNodePointer(IntNode * next) : void

+ IntNode() : constructor
+ IntNode(int value) : init
+ IntNode(int value, IntNode * nextNode) : init 


bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>10</x>
      <y>0</y>
      <w>260</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Created by Isaac Hill
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>980</x>
      <y>80</y>
      <w>340</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>IntNodeArray
--
- size : int
- front : IntNode *

--
+ IntNodeArray(int size) : constructor
+ setAtIndex(int index, int value) : void
+ getFromIndex(int index) : int
+ getSize() : int
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>340</y>
      <w>450</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
--
Data Members
- nodeData : Type
- nodePointer : Node&lt;Type&gt; *
--
Constructors
+ Node() : constructor
+ Node(Type value) : constructor
+ Node(Type data, Node&lt;Type&gt; * pointer) : constructor

Methods
+ getNodeData() : Type
+ getNodePointer() : Node&lt;Type&gt; *
+ setNodeData(Type data) : void
+ setNodePointer(Node&lt;Type&gt; * next) : void

bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>450</x>
      <y>0</y>
      <w>900</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>EmptyPackage
--
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>870</x>
      <y>160</y>
      <w>130</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>310</y>
      <w>520</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>Array&lt;Type&gt;
--
Data Members

- front : Node&lt;Type&gt; * 
- size : int
--
Constructors
+ Array() : constructor
+ Array(int size) : constructor

Methods

+ ~Array&lt;Type&gt;() : destrucotr
+ Array&lt;Type&gt;(const Array&lt;Type&gt; &amp; toBeCopied : copy constructor

+ getSize() const : int
+ getFront() const : Node&lt;Type&gt; * 

+ setAtIndex(int index, Type value) : void
+ getFrome Index(int index) : Type
bg=magenta</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>480</y>
      <w>100</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>560</x>
      <y>690</y>
      <w>450</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>Model :: List&lt;Type&gt;
--
- size : int
- front : Node&lt;Type&gt; *
--
+ List&lt;Type&gt;() : constructor
+ List&lt;Type&gt;(const List&lt;Type&gt; &amp; source) : copy constructor
+ ~List&lt;Type&gt;() : deconstructor

+ addAtIndex(int index, Type value) : void
+ addFront(Type value) : void
+ addEnd(Type value) : void
+ remove(int index) : Type
+ setAtIndex(int index, Type data) : Type
+ getFromIndex(int index) : Type
+ contains(Type data) : bool
+ getSize() const : int
+ getFront() const : Node&lt;Type&gt; *
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>550</y>
      <w>140</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>120.0;300.0;50.0;300.0;50.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
